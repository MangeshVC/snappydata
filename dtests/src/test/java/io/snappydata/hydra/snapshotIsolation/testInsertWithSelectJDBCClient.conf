hydra.Prms-testRequirement = "Test to verify snapshotIsolation for insert operation in Column table";

INITTASK    taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationTest taskMethod = HydraTask_initialize
            threadGroups = snappyThreads,snappyStoreThreads,leadThreads;

INCLUDE $JTESTS/io/snappydata/hydra/snapshotIsolation/nw_schema.conf;
INCLUDE $JTESTS/io/snappydata/hydra/northwind/startDualModeCluster.conf;
INCLUDE $JTESTS/io/snappydata/hydra/snapshotIsolation/derby.inc;

INITTASK    taskClass   = io.snappydata.hydra.cluster.SnappyTest taskMethod  = HydraTask_executeSnappyJob
            io.snappydata.hydra.cluster.SnappyPrms-jobClassNames = io.snappydata.hydra.northwind.CreateAndLoadNWTablesJob
            io.snappydata.hydra.cluster.SnappyPrms-appPropsForJobServer = "dataFilesLocation=${dataFilesLocation},tableType=${tableType}"
            io.snappydata.hydra.cluster.SnappyPrms-userAppJar = snappydata-store-scala-tests*tests.jar
            threadGroups = snappyThreads
            ;

//task for running dmlOps
TASK        taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationTest taskMethod  = HydraTask_performDMLOp
            threadGroups = snappyStoreThreads;

//task for running select queries
TASK        taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationTest taskMethod  = HydraTask_executeQueries
            maxThreads = 1
            threadGroups = leadThreads;

//task for running select queries at the end of test
CLOSETASK   taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationTest taskMethod  = HydraTask_executeQueries
            threadGroups = snappyThreads;

io.snappydata.hydra.cluster.SnappyPrms-dmlOperations = ONEOF insert FOENO;
//io.snappydata.hydra.cluster.SnappyPrms-dmlOperations = ONEOF insert update delete FOENO;

INCLUDE $JTESTS/io/snappydata/hydra/northwind/stopDualModeCluster.conf;
hydra.Prms-totalTaskTimeSec           = 300;

